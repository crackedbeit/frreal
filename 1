//MyClient.java

import java.util.Scanner;
import java.rmi.*;  
public class MyClient
{  
	public static void main(String args[])
	{  
		try
		{  
			Concat stub=(Concat)Naming.lookup("localhost");  
			Scanner input = new Scanner(System.in);			
			String x,y;
			System.out.println("Enter String 1: ");
			x = input.nextLine();
			System.out.println("Enter String 2: ");
			y = input.nextLine();
			System.out.println(stub.concat(x,y));  
		}
		catch(Exception e){}  
	}  
}

******************************************************************************
//MyServer.java

import java.rmi.*;  
import java.rmi.registry.*;  
public class MyServer
{  
	public static void main(String args[])
	{  
		try
		{  
			Concat stub=new ConcatRemote();  
			Naming.rebind("localhost",stub);  
		}
		catch(Exception e)
		{
			System.out.println(e);
		}  
    	}  
}  

******************************************************************************
//ConcatRemote.java

import java.rmi.*;  
import java.rmi.server.*;  
public class ConcatRemote extends UnicastRemoteObject implements Concat
{  
	ConcatRemote()throws RemoteException
	{  
	    super();  
	}  
    	public String concat(String x,String y)
	{
		return x+y;
    	}  
}  

//Concat.java

import java.rmi.*;

public interface Concat extends Remote
{  
	public String concat(String x,String y)throws RemoteException;  
}  

Output:

Terminal 1:
preeti@ubuntu:~/Desktop/rmi$ javac *.java
preeti@ubuntu:~/Desktop/rmi$ rmic ConcatRemote
Warning: generation and use of skeletons and static stubs for JRMP
is deprecated. Skeletons are unnecessary, and static stubs have
been superseded by dynamically generated stubs. Users are
encouraged to migrate away from using rmic to generate skeletons and static
stubs. See the documentation for java.rmi.server.UnicastRemoteObject.
preeti@ubuntu:~/Desktop/rmi$ rmiregistry

Terminal 2:
preeti@ubuntu:~/Desktop/rmi$ java MyServer

Terminal 3:
preeti@ubuntu:~/Desktop/rmi$ java MyClient
Enter String 1:
KBT
Enter String 2:
COE
KBTCOE
preeti@ubuntu:~/Desktop/rmi$
